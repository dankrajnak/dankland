{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nexport default React.memo(function ThreeContainer(props) {\n  const container = React.useRef(null);\n\n  const {\n    start,\n    stop,\n    width,\n    height\n  } = props,\n        otherProps = _objectWithoutProperties(props, [\"start\", \"stop\", \"width\", \"height\"]);\n\n  React.useEffect(() => {\n    if (container.current) {\n      const curValOfContainer = container.current;\n      start(curValOfContainer);\n      return () => {\n        stop(curValOfContainer);\n      };\n    }\n  }, [start, stop]);\n  return __jsx(\"div\", _extends({\n    ref: container,\n    style: {\n      width: width + \"px\",\n      height: height + \"px\"\n    }\n  }, otherProps));\n});","map":null,"metadata":{},"sourceType":"module"}