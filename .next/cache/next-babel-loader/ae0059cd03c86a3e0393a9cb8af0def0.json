{"ast":null,"code":"import { RungeKutta } from \"../RungeKutta/RungeKutta.service\";\nconst sigma = 10;\nconst rho = 28;\nconst beta = -8 / 3;\nconst deltaTime = 0.005;\n\nconst rungeKuttaFunction = p => {\n  const x = p.get(\"x\") || 0;\n  const y = p.get(\"y\") || 0;\n  const z = p.get(\"z\") || 0;\n  return p.set(\"x\", sigma * (y - x)).set(\"y\", rho * x - y - x * z).set(\"z\", beta * z + x * y);\n};\n\nconst rungeKuttaCalculator = RungeKutta(rungeKuttaFunction);\n/**\n * Calculates the next value in a lorenz strange attractor using\n * Runge Katta approximation given sigma of 10, rho of 28,\n * beta of -8/3 with a delta time of .005.\n * @param {Position} p previous position\n */\n\nconst getNextPosition = p => rungeKuttaCalculator(p, deltaTime);\n\nexport default getNextPosition;","map":null,"metadata":{},"sourceType":"module"}