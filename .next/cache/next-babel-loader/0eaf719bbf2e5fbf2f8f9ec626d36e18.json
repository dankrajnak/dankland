{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport ColorInterpolate from \"color-interpolate\";\nimport getNextPosition from \"../../../Services/StrangeAttractor/StrangeAttractor.service\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\nimport { Map } from \"immutable\";\n\nconst mapper = (fromLow, fromHigh, toLow, toHigh) => mapValue => (mapValue - fromLow) / (fromHigh - fromLow) * (toHigh - toLow) + toLow;\n\nconst colorInterpolator = ColorInterpolate([\"#F58B73\", \"#F26A7C\", \"#BD4EB2\", \"#894EAB\", \"#554396\"]);\nlet position = Map({\n  x: 10,\n  y: 10,\n  z: 25 + Math.random() * 10 - 5\n});\n\nconst Lorenz = props => {\n  const xMapper = mapper(-20, 20, 0, props.width);\n  const yMapper = mapper(0, 50, 0, props.height);\n  const colorMapper = mapper(0, 40, 0, 1); // Start the animation!\n\n  const artist = context => {\n    // Draw the thing\n    context.fillStyle = props.colorful ? colorInterpolator(colorMapper( // @ts-ignore\n    position.get(\"z\"))) : \"#2f3030\";\n    context.fillRect(0, 0, props.width, props.height);\n    context.fillStyle = \"#EEE\";\n    context.beginPath();\n    context.ellipse(xMapper( // @ts-ignore\n    position.get(\"x\")), yMapper( // @ts-ignore\n    position.get(\"z\")), 5, 5, 0, 0, Math.PI * 2);\n    context.fill();\n    context.closePath(); // Figure out the next position of this.\n\n    position = getNextPosition(position);\n  };\n\n  const initializeCanvas = context => {\n    context.fillStyle = \"#2f3030\";\n    context.strokeStyle = \"#EEE\";\n    context.lineWidth = 0.5;\n  };\n\n  return __jsx(CanvasDrawer, {\n    artist: artist,\n    initializeCanvas: initializeCanvas,\n    width: props.width,\n    height: props.height,\n    fps: 50\n  });\n};\n\nexport default React.memo(Lorenz);","map":null,"metadata":{},"sourceType":"module"}