{"ast":null,"code":"// flow\nimport { useEffect, useRef } from \"react\";\nimport throttle from \"../../Services/Throttle/Throttle.service\";\nexport var useScroll = function useScroll(listener) {\n  var throtleAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n  useEffect(function () {\n    var throttledFunc = throttle(function (event) {\n      return listener(event.deltaY);\n    }, throtleAmount);\n    var wheelListener = window.addEventListener(\"wheel\", throttledFunc);\n    return function () {\n      return window.removeEventListener(\"wheel\", wheelListener);\n    };\n  }, [listener, throtleAmount]);\n};\nexport var useScrollThreshold = function useScrollThreshold(listener) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  var coolDown = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  var throttledListener = useRef(throttle(function (val) {\n    return listener(val);\n  }, coolDown));\n  var callback = useRef(function (val) {\n    if (val > threshold || val < -threshold) {\n      throttledListener.current(val);\n    }\n  });\n  useScroll(callback.current);\n};\nexport default useScrollThreshold;","map":null,"metadata":{},"sourceType":"module"}