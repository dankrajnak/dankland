{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport SEO from \"../View/Utility/seo\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport TheCoolestOne from \"../View/PageComponents/Homepage/TheCoolestOne\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport Lorenz from \"../View/PageComponents/Homepage/Lorenz\";\nimport useScrollThreshold from \"../View/Hooks/useScrollTreshold\";\nimport throttle from \"../Services/Throttle/Throttle.service\";\nimport useWindowEvent from \"../View/Hooks/useWindowEvent\";\nconst TitleHolder = styled.div`\n  position: fixed;\n  z-index: 0;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\nconst Title = styled.h1`\n  color: ${props => props.color || \"#2f3030\"};\n  font-size: 2em;\n  font-weight: 500;\n  text-align: center;\n`;\nconst Fader = styled.div`\n  position: fixed;\n  opacity: ${props => props.visible ? 1 : 0};\n  transition: opacity 1s ease;\n`;\nconst NUM_PAGES = 3;\n\nconst IndexPage = () => {\n  const [width, height] = useFullScreen();\n  const [currentPage, setCurrentPage] = React.useState(0);\n\n  const incrementPage = () => setCurrentPage(page => Math.min(page + 1, NUM_PAGES - 1));\n\n  const decrementPage = () => setCurrentPage(page => Math.max(page - 1, 0));\n\n  useScrollThreshold(val => {\n    if (val > 0) {\n      incrementPage();\n    } else {\n      decrementPage();\n    }\n  });\n  useWindowEvent(\"keydown\", throttle(e => {\n    // Up arrow\n    if (e.keyCode === 38) {\n      decrementPage();\n    } // Down arrow\n    else if (e.keyCode === 40) {\n        incrementPage();\n      }\n  }, 100));\n  return __jsx(MenuLayout, {\n    color: currentPage === 0 ? \"white\" : \"black\"\n  }, __jsx(SEO, {\n    title: \"Home\",\n    keywords: [\"daniel\", \"krajnak\", \"portfolio\"]\n  }), currentPage === 0 && __jsx(Fader, {\n    visible: currentPage === 0\n  }, __jsx(TitleHolder, null, __jsx(Title, {\n    color: \"#EEE\"\n  }, \"Again, again, again\")), __jsx(Lorenz, {\n    width: width,\n    height: height\n  })), __jsx(Fader, {\n    visible: currentPage === 1\n  }, __jsx(TitleHolder, null, __jsx(Title, null, \" again, again again\")), __jsx(TheCoolestOne, {\n    width: width,\n    height: height\n  })), __jsx(Fader, {\n    visible: currentPage === 2\n  }, __jsx(TitleHolder, null, __jsx(Title, null, \"agin again agian\"))));\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}