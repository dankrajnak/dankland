{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/pages/perspective.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport PerspectiveSquare from \"../Services/PerspectiveSquare/PerspectiveSquare.service\";\nimport Square from \"../Domain/Square/Square\";\nimport Vector2d from \"../Domain/Vector/Vector2d\";\nimport OriginalPerspectiveSquareDrawer from \"../Services/PerspectiveSquare/Drawers/Original.service\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport SEO from \"../View/Utility/seo\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\nconst SQUARE_WIDTH = 300;\nconst FullScreen = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Perspective = () => {\n  const [width, height, flash] = useFullScreen();\n  const [focusPoint, mouseProps] = useClickHoverWander(width, height);\n  const perspectiveSquare = React.useRef(null);\n  const squareDrawer = React.useRef(null);\n\n  const initializeCanvas = ctx => {\n    //Create the squares.\n    perspectiveSquare.current = new PerspectiveSquare(new Square(SQUARE_WIDTH, new Vector2d((width - SQUARE_WIDTH) / 2, (height + SQUARE_WIDTH) / 2)), 100);\n    squareDrawer.current = new OriginalPerspectiveSquareDrawer(ctx, {\n      mapper: v => new Vector2d(v.x, height - v.y),\n      lineColor: \"#04D9C4\"\n    });\n  };\n\n  const artist = ctx => {\n    if (!squareDrawer.current || !perspectiveSquare.current) {\n      return;\n    }\n\n    ctx.fillStyle = \"#0D0D0D\";\n    ctx.fillRect(0, 0, width, height);\n    squareDrawer.current.draw(perspectiveSquare.current.getSquares(new Vector2d(focusPoint.x, height - focusPoint.y)), focusPoint.clone());\n  };\n\n  if (flash) {\n    return flash;\n  }\n\n  return __jsx(MenuLayout, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(SEO, {\n    title: \"Perspective\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(FullScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(CanvasDrawer, _extends({\n    width: width,\n    height: height,\n    initializeCanvas: initializeCanvas,\n    artist: artist\n  }, mouseProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nexport default Perspective;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/pages/perspective.tsx"],"names":["React","styled","useFullScreen","PerspectiveSquare","Square","Vector2d","OriginalPerspectiveSquareDrawer","MenuLayout","SEO","useClickHoverWander","CanvasDrawer","SQUARE_WIDTH","FullScreen","div","Perspective","width","height","flash","focusPoint","mouseProps","perspectiveSquare","useRef","squareDrawer","initializeCanvas","ctx","current","mapper","v","x","y","lineColor","artist","fillStyle","fillRect","draw","getSquares","clone"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport PerspectiveSquare from \"../Services/PerspectiveSquare/PerspectiveSquare.service\";\nimport Square from \"../Domain/Square/Square\";\nimport Vector2d from \"../Domain/Vector/Vector2d\";\nimport OriginalPerspectiveSquareDrawer from \"../Services/PerspectiveSquare/Drawers/Original.service\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport SEO from \"../View/Utility/seo\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\nimport PersepctiveSquareDrawer from \"../Services/PerspectiveSquare/Drawers/Drawer.interface\";\n\nconst SQUARE_WIDTH = 300;\n\nconst FullScreen = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Perspective = () => {\n  const [width, height, flash] = useFullScreen();\n  const [focusPoint, mouseProps] = useClickHoverWander(width, height);\n  const perspectiveSquare = React.useRef<PerspectiveSquare | null>(null);\n  const squareDrawer = React.useRef<PersepctiveSquareDrawer | null>(null);\n\n  const initializeCanvas = (ctx: CanvasRenderingContext2D) => {\n    //Create the squares.\n    perspectiveSquare.current = new PerspectiveSquare(\n      new Square(\n        SQUARE_WIDTH,\n        new Vector2d((width - SQUARE_WIDTH) / 2, (height + SQUARE_WIDTH) / 2)\n      ),\n      100\n    );\n\n    squareDrawer.current = new OriginalPerspectiveSquareDrawer(ctx, {\n      mapper: (v: Vector2d) => new Vector2d(v.x, height - v.y),\n      lineColor: \"#04D9C4\",\n    });\n  };\n\n  const artist = (ctx: CanvasRenderingContext2D) => {\n    if (!squareDrawer.current || !perspectiveSquare.current) {\n      return;\n    }\n    ctx.fillStyle = \"#0D0D0D\";\n    ctx.fillRect(0, 0, width, height);\n    squareDrawer.current.draw(\n      perspectiveSquare.current.getSquares(\n        new Vector2d(focusPoint.x, height - focusPoint.y)\n      ),\n      focusPoint.clone()\n    );\n  };\n\n  if (flash) {\n    return flash;\n  }\n\n  return (\n    <MenuLayout color={\"white\"}>\n      <SEO title=\"Perspective\" />\n      <FullScreen>\n        <CanvasDrawer\n          width={width}\n          height={height}\n          initializeCanvas={initializeCanvas}\n          artist={artist}\n          {...mouseProps}\n        />\n      </FullScreen>\n    </MenuLayout>\n  );\n};\n\nexport default Perspective;\n"]},"metadata":{},"sourceType":"module"}