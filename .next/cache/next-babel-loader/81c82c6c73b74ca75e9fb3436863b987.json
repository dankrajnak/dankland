{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nexport default function MemoService(func) {\n  var store = new _Map();\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // TODO: in some cases, stringify might be more expensive than the actual function\n    // Need to figure out if there's some way we could hash args.\n    var key = _JSON$stringify(args);\n\n    if (store.has(key)) {\n      var returnItem = store.get(key); // Check for undefined is really just for typescript.  Not actually necessary.\n\n      if (returnItem) {\n        return returnItem;\n      } else {\n        return func.apply(void 0, args);\n      }\n    } else {\n      var result = func.apply(void 0, args);\n      store.set(key, result);\n      return result;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}