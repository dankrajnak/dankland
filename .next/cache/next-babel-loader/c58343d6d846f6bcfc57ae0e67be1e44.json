{"ast":null,"code":"import * as React from \"react\";\nimport throttle from \"../../Services/Throttle/Throttle.service\";\nimport useSafeWindow from \"./useSafeWindow\";\n/**\n * Returns how far the window is currently scrolled in either the vertical\n * or horizontal direction.\n * @param {boolean} [vertical=true]\n */\n\nconst useScrollAmount = (vertical = true) => {\n  const [window] = useSafeWindow();\n  const [scrollAmount, setScrollAmount] = React.useState(0);\n  React.useEffect(() => {\n    const throttledFunc = throttle(() => window && setScrollAmount(vertical ? window.scrollY : window.scrollX), 30);\n    const wheelListener = window && window.addEventListener(\"scroll\", throttledFunc);\n    return () => {\n      window && wheelListener && window.removeEventListener(\"scroll\", wheelListener);\n    };\n  }, [vertical, window]);\n  return scrollAmount;\n};\n\nexport default useScrollAmount;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/Hooks/useScrollAmount.ts"],"names":["React","throttle","useSafeWindow","useScrollAmount","vertical","window","scrollAmount","setScrollAmount","useState","useEffect","throttledFunc","scrollY","scrollX","wheelListener","addEventListener","removeEventListener"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA;;;;;;AAKA,MAAMC,eAAe,GAAG,CAACC,QAAiB,GAAG,IAArB,KAAsC;AAC5D,QAAM,CAACC,MAAD,IAAWH,aAAa,EAA9B;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAxC;AACAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,UAAMC,aAAa,GAAGT,QAAQ,CAC5B,MACEI,MAAM,IAAIE,eAAe,CAACH,QAAQ,GAAGC,MAAM,CAACM,OAAV,GAAoBN,MAAM,CAACO,OAApC,CAFC,EAG5B,EAH4B,CAA9B;AAKA,UAAMC,aAAa,GACjBR,MAAM,IAAIA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCJ,aAAlC,CADZ;AAGA,WAAO,MAAM;AACXL,MAAAA,MAAM,IACJQ,aADF,IAEER,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,aAArC,CAFF;AAGD,KAJD;AAKD,GAdD,EAcG,CAACT,QAAD,EAAWC,MAAX,CAdH;AAeA,SAAOC,YAAP;AACD,CAnBD;;AAqBA,eAAeH,eAAf","sourcesContent":["import * as React from \"react\";\nimport throttle from \"../../Services/Throttle/Throttle.service\";\nimport useSafeWindow from \"./useSafeWindow\";\n\n/**\n * Returns how far the window is currently scrolled in either the vertical\n * or horizontal direction.\n * @param {boolean} [vertical=true]\n */\nconst useScrollAmount = (vertical: boolean = true): number => {\n  const [window] = useSafeWindow();\n  const [scrollAmount, setScrollAmount] = React.useState(0);\n  React.useEffect(() => {\n    const throttledFunc = throttle(\n      () =>\n        window && setScrollAmount(vertical ? window.scrollY : window.scrollX),\n      30\n    );\n    const wheelListener =\n      window && window.addEventListener(\"scroll\", throttledFunc);\n\n    return () => {\n      window &&\n        wheelListener &&\n        window.removeEventListener(\"scroll\", wheelListener);\n    };\n  }, [vertical, window]);\n  return scrollAmount;\n};\n\nexport default useScrollAmount;\n"]},"metadata":{},"sourceType":"module"}