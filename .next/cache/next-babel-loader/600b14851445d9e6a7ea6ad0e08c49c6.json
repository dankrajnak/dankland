{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport getNextPendulum from \"../../../Services/DoublePendulum/DoublePendulum.service\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\n\nvar getPendulumCoordinates = function getPendulumCoordinates(pendulum) {\n  // Get coordinates of lower mass.\n  var aAngle = pendulum.get(\"aAngle\") || 0;\n  var aLength = pendulum.get(\"aLength\") || 0;\n  var bAngle = pendulum.get(\"bAngle\") || 0;\n  var bLength = pendulum.get(\"bLength\") || 0;\n  var x1 = Math.sin(aAngle) * aLength;\n  var y1 = Math.cos(aAngle) * aLength;\n  var x2 = x1 + Math.sin(bAngle) * bLength;\n  var y2 = y1 + Math.cos(bAngle) * bLength;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  };\n};\n/**\n * Simulates chaotic pendulums utilizing the Runge-Katta algorithm\n */\n\n\nexport default React.memo(function DoublePendulums(props) {\n  var pendulums = props.pendulumsInitialState;\n\n  var drawPendulums = function drawPendulums(context) {\n    props.renderPendulums(pendulums.map(function (pendulum) {\n      return getPendulumCoordinates(pendulum);\n    }), context, {\n      width: props.width,\n      height: props.height\n    });\n    pendulums = pendulums.map(getNextPendulum);\n  };\n\n  return __jsx(CanvasDrawer, {\n    width: props.width,\n    height: props.height,\n    artist: drawPendulums\n  });\n});","map":null,"metadata":{},"sourceType":"module"}