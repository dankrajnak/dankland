{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport PerspectiveSquare from \"../../../Services/PerspectiveSquare/PerspectiveSquare.service\";\nimport OriginalPerspectiveSquareDrawer from \"../../../Services/PerspectiveSquare/Drawers/Original.service\";\nimport Vector2d from \"../../../Domain/Vector/Vector2d\";\nimport Square from \"../../../Domain/Square/Square\";\nimport useClickHoverWander from \"../../Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\n\nvar PerspectivePreview = function PerspectivePreview(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  var squares = React.useRef(null);\n  var squareDrawer = React.useRef(null);\n\n  var _useClickHoverWander = useClickHoverWander(width, height),\n      _useClickHoverWander2 = _slicedToArray(_useClickHoverWander, 2),\n      focusPoint = _useClickHoverWander2[0],\n      mouseProps = _useClickHoverWander2[1];\n\n  var initializeCanvas = function initializeCanvas(ctx) {\n    var SQUARE_WIDTH = width / 4; // Create squares\n\n    squares.current = [new PerspectiveSquare(new Square(SQUARE_WIDTH, new Vector2d((width - SQUARE_WIDTH) / 2, (height + SQUARE_WIDTH) / 4)), 50), new PerspectiveSquare(new Square(SQUARE_WIDTH, new Vector2d((width - SQUARE_WIDTH) / 2, 3 * (height + SQUARE_WIDTH) / 4)), 50)]; // Create drawer\n\n    squareDrawer.current = new OriginalPerspectiveSquareDrawer(ctx, {\n      mapper: function mapper(v) {\n        return new Vector2d(v.x, height - v.y);\n      },\n      lineColor: \"#04D9C4\",\n      includeDashes: false\n    });\n  };\n\n  var artist = React.useMemo(function () {\n    return function (ctx) {\n      if (!squareDrawer.current || !squares.current) {\n        return null;\n      }\n\n      ctx.fillStyle = \"#0D0D0D\";\n      ctx.fillRect(0, 0, width, height);\n      squareDrawer.current.draw(squares.current[0].getSquares(new Vector2d(focusPoint.x, height - focusPoint.y)), focusPoint);\n      squareDrawer.current.draw(squares.current[1].getSquares(new Vector2d(focusPoint.x, height - focusPoint.y)), focusPoint);\n    };\n  }, [focusPoint, height, width]);\n  return __jsx(CanvasDrawer, _extends({\n    width: width,\n    height: height,\n    initializeCanvas: initializeCanvas,\n    artist: artist\n  }, mouseProps));\n};\n\nexport default PerspectivePreview;","map":null,"metadata":{},"sourceType":"module"}