{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/View/PageComponents/Menu/HallwayPreview.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\n\nvar HallwayPreview = function HallwayPreview(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  var spheres = React.useRef([{\n    x: width / 2,\n    y: height / 2,\n    color: \"#ee6666\"\n  }, {\n    x: width / 2,\n    y: height / 2,\n    color: \"#333388\"\n  }]);\n  var renderNumber = React.useRef(0);\n  var artist = React.useMemo(function () {\n    return function (ctx) {\n      renderNumber.current = renderNumber.current + 1;\n      ctx.fillStyle = \"#222\";\n      ctx.fillRect(0, 0, width, height);\n      spheres.current.forEach(function (sphere, index) {\n        ctx.fillStyle = sphere.color;\n        ctx.beginPath();\n        ctx.ellipse(sphere.x + Math.sin(renderNumber.current * 0.016 + index) * 100, sphere.y + Math.sin(renderNumber.current * 0.012 + index) * 100, 10, 10, 0, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n      });\n    };\n  }, [height, width]);\n  return __jsx(CanvasDrawer, {\n    width: width,\n    height: height,\n    artist: artist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n};\n\nexport default React.memo(HallwayPreview);","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/PageComponents/Menu/HallwayPreview.tsx"],"names":["React","CanvasDrawer","HallwayPreview","width","height","spheres","useRef","x","y","color","renderNumber","artist","useMemo","ctx","current","fillStyle","fillRect","forEach","sphere","index","beginPath","ellipse","Math","sin","PI","closePath","fill","memo"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAaA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA8B;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AACnD,MAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAuB,CACrC;AAAEC,IAAAA,CAAC,EAAEJ,KAAK,GAAG,CAAb;AAAgBK,IAAAA,CAAC,EAAEJ,MAAM,GAAG,CAA5B;AAA+BK,IAAAA,KAAK,EAAE;AAAtC,GADqC,EAErC;AAAEF,IAAAA,CAAC,EAAEJ,KAAK,GAAG,CAAb;AAAgBK,IAAAA,CAAC,EAAEJ,MAAM,GAAG,CAA5B;AAA+BK,IAAAA,KAAK,EAAE;AAAtC,GAFqC,CAAvB,CAAhB;AAIA,MAAMC,YAAY,GAAGV,KAAK,CAACM,MAAN,CAAa,CAAb,CAArB;AACA,MAAMK,MAAM,GAAGX,KAAK,CAACY,OAAN,CACb;AAAA,WAAM,UAACC,GAAD,EAAmC;AACvCH,MAAAA,YAAY,CAACI,OAAb,GAAuBJ,YAAY,CAACI,OAAb,GAAuB,CAA9C;AAEAD,MAAAA,GAAG,CAACE,SAAJ,GAAgB,MAAhB;AACAF,MAAAA,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBb,KAAnB,EAA0BC,MAA1B;AAEAC,MAAAA,OAAO,CAACS,OAAR,CAAgBG,OAAhB,CAAwB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACzCN,QAAAA,GAAG,CAACE,SAAJ,GAAgBG,MAAM,CAACT,KAAvB;AACAI,QAAAA,GAAG,CAACO,SAAJ;AACAP,QAAAA,GAAG,CAACQ,OAAJ,CACEH,MAAM,CAACX,CAAP,GAAWe,IAAI,CAACC,GAAL,CAASb,YAAY,CAACI,OAAb,GAAuB,KAAvB,GAA+BK,KAAxC,IAAiD,GAD9D,EAEED,MAAM,CAACV,CAAP,GAAWc,IAAI,CAACC,GAAL,CAASb,YAAY,CAACI,OAAb,GAAuB,KAAvB,GAA+BK,KAAxC,IAAiD,GAF9D,EAGE,EAHF,EAIE,EAJF,EAKE,CALF,EAME,CANF,EAOE,IAAIG,IAAI,CAACE,EAPX;AASAX,QAAAA,GAAG,CAACY,SAAJ;AACAZ,QAAAA,GAAG,CAACa,IAAJ;AACD,OAdD;AAeD,KArBD;AAAA,GADa,EAuBb,CAACtB,MAAD,EAASD,KAAT,CAvBa,CAAf;AA0BA,SAAO,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAA4B,IAAA,MAAM,EAAEC,MAApC;AAA4C,IAAA,MAAM,EAAEO,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAjCD;;AAmCA,eAAeX,KAAK,CAAC2B,IAAN,CAAWzB,cAAX,CAAf","sourcesContent":["import * as React from \"react\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\n\ninterface Props {\n  width: number;\n  height: number;\n}\n\ninterface Sphere {\n  x: number;\n  y: number;\n  color: string;\n}\n\nconst HallwayPreview = ({ width, height }: Props) => {\n  const spheres = React.useRef<Sphere[]>([\n    { x: width / 2, y: height / 2, color: \"#ee6666\" },\n    { x: width / 2, y: height / 2, color: \"#333388\" },\n  ]);\n  const renderNumber = React.useRef(0);\n  const artist = React.useMemo(\n    () => (ctx: CanvasRenderingContext2D) => {\n      renderNumber.current = renderNumber.current + 1;\n\n      ctx.fillStyle = \"#222\";\n      ctx.fillRect(0, 0, width, height);\n\n      spheres.current.forEach((sphere, index) => {\n        ctx.fillStyle = sphere.color;\n        ctx.beginPath();\n        ctx.ellipse(\n          sphere.x + Math.sin(renderNumber.current * 0.016 + index) * 100,\n          sphere.y + Math.sin(renderNumber.current * 0.012 + index) * 100,\n          10,\n          10,\n          0,\n          0,\n          2 * Math.PI\n        );\n        ctx.closePath();\n        ctx.fill();\n      });\n    },\n    [height, width]\n  );\n\n  return <CanvasDrawer width={width} height={height} artist={artist} />;\n};\n\nexport default React.memo(HallwayPreview);\n"]},"metadata":{},"sourceType":"module"}