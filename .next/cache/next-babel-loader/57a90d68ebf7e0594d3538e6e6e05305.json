{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/pages/metaSphere.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport MetaSphere from \"../Services/MetaSphere/MetaSphere\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\n\nconst MetaSphereElm = () => {\n  const metaDrawer = React.useRef(null);\n  const [width, height] = useFullScreen();\n  const [focusPoint, mouseProps] = useClickHoverWander(width, height);\n  React.useEffect(() => {\n    metaDrawer.current = new MetaSphere(width, height);\n  }, [height, width]);\n\n  const artist = ctx => {\n    metaDrawer.current && metaDrawer.current.draw(ctx, focusPoint);\n  };\n\n  return __jsx(MenuLayout, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(CanvasDrawer, _extends({\n    width: width,\n    height: height,\n    artist: artist\n  }, mouseProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nexport default MetaSphereElm;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/pages/metaSphere.tsx"],"names":["React","MenuLayout","MetaSphere","useFullScreen","useClickHoverWander","CanvasDrawer","MetaSphereElm","metaDrawer","useRef","width","height","focusPoint","mouseProps","useEffect","current","artist","ctx","draw"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAgC,IAAhC,CAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBP,aAAa,EAArC;AACA,QAAM,CAACQ,UAAD,EAAaC,UAAb,IAA2BR,mBAAmB,CAACK,KAAD,EAAQC,MAAR,CAApD;AACAV,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBN,IAAAA,UAAU,CAACO,OAAX,GAAqB,IAAIZ,UAAJ,CAAeO,KAAf,EAAsBC,MAAtB,CAArB;AACD,GAFD,EAEG,CAACA,MAAD,EAASD,KAAT,CAFH;;AAIA,QAAMM,MAAM,GAAIC,GAAD,IAAmC;AAChDT,IAAAA,UAAU,CAACO,OAAX,IAAsBP,UAAU,CAACO,OAAX,CAAmBG,IAAnB,CAAwBD,GAAxB,EAA6BL,UAA7B,CAAtB;AACD,GAFD;;AAIA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,MAAM,EAAEK;AAHV,KAIMH,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAUD,CAtBD;;AAwBA,eAAeN,aAAf","sourcesContent":["import * as React from \"react\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport MetaSphere from \"../Services/MetaSphere/MetaSphere\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\n\nconst MetaSphereElm = () => {\n  const metaDrawer = React.useRef<MetaSphere | null>(null);\n  const [width, height] = useFullScreen();\n  const [focusPoint, mouseProps] = useClickHoverWander(width, height);\n  React.useEffect(() => {\n    metaDrawer.current = new MetaSphere(width, height);\n  }, [height, width]);\n\n  const artist = (ctx: CanvasRenderingContext2D) => {\n    metaDrawer.current && metaDrawer.current.draw(ctx, focusPoint);\n  };\n\n  return (\n    <MenuLayout color=\"white\">\n      <CanvasDrawer\n        width={width}\n        height={height}\n        artist={artist}\n        {...mouseProps}\n      />\n    </MenuLayout>\n  );\n};\n\nexport default MetaSphereElm;\n"]},"metadata":{},"sourceType":"module"}