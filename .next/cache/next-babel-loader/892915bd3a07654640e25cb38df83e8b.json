{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport MetaSphere from \"../Services/MetaSphere/MetaSphere\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\n\nconst MetaSphereElm = () => {\n  const metaDrawer = React.useRef(null);\n  const [width, height] = useFullScreen();\n  const [focusPoint, mouseProps] = useClickHoverWander(width, height);\n  React.useEffect(() => {\n    metaDrawer.current = new MetaSphere(width, height);\n  }, [height, width]);\n\n  const artist = ctx => {\n    metaDrawer.current && metaDrawer.current.draw(ctx, focusPoint);\n  };\n\n  return __jsx(MenuLayout, {\n    color: \"white\"\n  }, __jsx(CanvasDrawer, _extends({\n    width: width,\n    height: height,\n    artist: artist\n  }, mouseProps)));\n};\n\nexport default MetaSphereElm;","map":null,"metadata":{},"sourceType":"module"}