{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport MetaSphere from \"../../../Services/MetaSphere/MetaSphere\";\nimport useClickHoverWander from \"../../Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\n\nvar MetaSpherePreview = function MetaSpherePreview(props) {\n  var metaDrawer = React.useRef(null);\n\n  var _useClickHoverWander = useClickHoverWander(props.width, props.height),\n      _useClickHoverWander2 = _slicedToArray(_useClickHoverWander, 2),\n      focusPoint = _useClickHoverWander2[0],\n      mouseProps = _useClickHoverWander2[1];\n\n  React.useEffect(function () {\n    metaDrawer.current = new MetaSphere(props.width, props.height, {\n      dotSize: 2,\n      p: 0.002,\n      numberOfColumns: 20,\n      numberOfRows: 20,\n      shouldSlideDots: false\n    });\n  }, [props.height, props.width]);\n  var artist = React.useMemo(function () {\n    return function (ctx) {\n      metaDrawer.current && metaDrawer.current.draw(ctx, focusPoint);\n    };\n  }, [focusPoint]);\n  return __jsx(CanvasDrawer, _extends({\n    width: props.width,\n    height: props.height,\n    artist: artist\n  }, mouseProps));\n};\n\nexport default MetaSpherePreview;","map":null,"metadata":{},"sourceType":"module"}