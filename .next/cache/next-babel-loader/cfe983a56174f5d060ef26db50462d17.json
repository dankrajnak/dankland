{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport useSafeWindow from \"./useSafeWindow\";\n\nvar useFullScreen = function useFullScreen() {\n  var _useSafeWindow = useSafeWindow(),\n      _useSafeWindow2 = _slicedToArray(_useSafeWindow, 2),\n      window = _useSafeWindow2[0],\n      flash = _useSafeWindow2[1];\n\n  var _useState = useState(window ? window.innerWidth : 0),\n      width = _useState[0],\n      setWidth = _useState[1];\n\n  var _useState2 = useState(window ? window.innerHeight : 0),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  useEffect(function () {\n    var resize = function resize() {\n      if (window) {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n      }\n    };\n\n    resize();\n    var listener = window && window.addEventListener(\"resize\", resize);\n    return function () {\n      window && listener && window.removeEventListener(\"resize\", listener);\n    };\n  }, [window]);\n  return [width, height, flash];\n};\n\nexport default useFullScreen;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/Hooks/useFullScreen.ts"],"names":["useEffect","useState","useSafeWindow","useFullScreen","window","flash","innerWidth","width","setWidth","innerHeight","height","setHeight","resize","listener","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA4C;AAAA,uBACxCD,aAAa,EAD2B;AAAA;AAAA,MACzDE,MADyD;AAAA,MACjDC,KADiD;;AAAA,kBAEtCJ,QAAQ,CAACG,MAAM,GAAGA,MAAM,CAACE,UAAV,GAAuB,CAA9B,CAF8B;AAAA,MAEzDC,KAFyD;AAAA,MAElDC,QAFkD;;AAAA,mBAGpCP,QAAQ,CAACG,MAAM,GAAGA,MAAM,CAACK,WAAV,GAAwB,CAA/B,CAH4B;AAAA,MAGzDC,MAHyD;AAAA,MAGjDC,SAHiD;;AAKhEX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,UAAIR,MAAJ,EAAY;AACVI,QAAAA,QAAQ,CAACJ,MAAM,CAACE,UAAR,CAAR;AACAK,QAAAA,SAAS,CAACP,MAAM,CAACK,WAAR,CAAT;AACD;AACF,KALD;;AAMAG,IAAAA,MAAM;AACN,QAAMC,QAAQ,GAAGT,MAAM,IAAIA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCF,MAAlC,CAA3B;AACA,WAAO,YAAM;AACXR,MAAAA,MAAM,IAAIS,QAAV,IAAsBT,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCF,QAArC,CAAtB;AACD,KAFD;AAGD,GAZQ,EAYN,CAACT,MAAD,CAZM,CAAT;AAaA,SAAO,CAACG,KAAD,EAAQG,MAAR,EAAgBL,KAAhB,CAAP;AACD,CAnBD;;AAqBA,eAAeF,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useSafeWindow from \"./useSafeWindow\";\n\nconst useFullScreen = (): [number, number, JSX.Element | null] => {\n  const [window, flash] = useSafeWindow();\n  const [width, setWidth] = useState(window ? window.innerWidth : 0);\n  const [height, setHeight] = useState(window ? window.innerHeight : 0);\n\n  useEffect(() => {\n    const resize = () => {\n      if (window) {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n      }\n    };\n    resize();\n    const listener = window && window.addEventListener(\"resize\", resize);\n    return () => {\n      window && listener && window.removeEventListener(\"resize\", listener);\n    };\n  }, [window]);\n  return [width, height, flash];\n};\n\nexport default useFullScreen;\n"]},"metadata":{},"sourceType":"module"}