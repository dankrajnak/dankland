{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport Canvas from \"../Canvas\";\nimport useSafeWindow from \"../../Hooks/useSafeWindow\";\n\nvar CanvasDrawer = function CanvasDrawer(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      initializeCanvas = _ref.initializeCanvas,\n      artist = _ref.artist,\n      fps = _ref.fps,\n      otherProps = _objectWithoutProperties(_ref, [\"width\", \"height\", \"initializeCanvas\", \"artist\", \"fps\"]);\n\n  var context = React.useRef(null);\n  var requestedFrame = React.useRef(null);\n  var getContext = React.useRef(function (c) {\n    return context.current = c;\n  });\n  React.useEffect(function () {\n    var draw = function draw(context) {\n      var then = _Date$now();\n\n      var renderFrame = function renderFrame() {\n        requestedFrame.current = requestAnimationFrame(function () {\n          renderFrame();\n\n          if (!fps) {\n            artist(context);\n          } else {\n            var now = _Date$now();\n\n            var delta = now - then;\n            var interval = 1000 / fps;\n\n            if (delta > interval) {\n              then = now - delta % interval;\n              artist(context);\n            }\n          }\n        });\n      };\n\n      renderFrame();\n    };\n\n    if (context.current) {\n      if (initializeCanvas) {\n        initializeCanvas(context.current);\n      }\n\n      draw(context.current);\n    }\n\n    return function () {\n      requestedFrame.current && cancelAnimationFrame(requestedFrame.current);\n    };\n  });\n  var flash = useSafeWindow()[1];\n\n  if (flash) {\n    return flash;\n  }\n\n  return __jsx(Canvas, _extends({\n    getContext: getContext.current,\n    width: width,\n    height: height\n  }, otherProps));\n};\n\nexport default React.memo(CanvasDrawer);","map":null,"metadata":{},"sourceType":"module"}