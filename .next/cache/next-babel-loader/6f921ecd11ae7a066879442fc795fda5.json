{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/View/PageComponents/Menu/CardMenu/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 8%;\\n  left: 8%;\\n  width: 100%;\\n  a {\\n    text-decoration: none;\\n    color: #222;\\n    &:hover {\\n      border-bottom: solid 1px #222;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  bottom: 20px;\\n  width: 100%;\\n  text-align: center;\\n  font-size: small;\\n  color: #aaa;\\n  z-index: 5000;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport useFullScreen from \"../../../Hooks/useFullScreen\";\nimport useScrollAmount from \"../../../Hooks/useScrollAmount\";\nimport CardDeck from \"./CardDeck/CardDeck\";\nvar ScrollMessage = styled.div.attrs(function (props) {\n  return {\n    style: {\n      opacity: props.opacity\n    }\n  };\n})(_templateObject());\nvar AboutContainer = styled.div(_templateObject2());\n/**\n * Pages are represented as cards on a deck. As the user scrolls the cards roll off the deck\n * offscreen.  Known to be a little buggy on iphones.\n */\n\nvar CardMenu = function CardMenu(_ref) {\n  var routeProps = _ref.routeProps,\n      cards = _ref.cards;\n\n  var _useFullScreen = useFullScreen(),\n      _useFullScreen2 = _slicedToArray(_useFullScreen, 3),\n      width = _useFullScreen2[0],\n      height = _useFullScreen2[1],\n      flash = _useFullScreen2[2];\n\n  var cardWidth = React.useMemo(function () {\n    return Math.min(500, width * 0.9);\n  }, [width]);\n  var cardHeight = React.useMemo(function () {\n    return Math.min(500, height * 0.7);\n  }, [height]);\n  var cardsWithDimensions = React.useMemo(function () {\n    return cards.map(function (card) {\n      return _objectSpread({}, card, {\n        background: __jsx(card.background, {\n          width: cardWidth,\n          height: cardHeight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })\n      });\n    });\n  }, [cardHeight, cardWidth, cards]);\n  var scrollToCard = React.useMemo(function () {\n    if (routeProps.location && routeProps.location.state && routeProps.location.state.prevPath) {\n      var prevLocation = routeProps.location.state.prevPath;\n      var index = cards.findIndex(function (card) {\n        return card.link === prevLocation;\n      });\n      return index === -1 ? null : index;\n    }\n\n    return null;\n  }, [cards, routeProps.location]);\n  var scroll = useScrollAmount();\n\n  if (flash) {\n    return flash;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(AboutContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Link, {\n    to: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"About\")), __jsx(CardDeck, {\n    cards: cardsWithDimensions,\n    width: width,\n    cardsWidth: cardWidth,\n    cardsHeight: cardHeight,\n    scrollToCard: scrollToCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(ScrollMessage, {\n    opacity: (1 - scroll / height) * 2 || 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Scroll Up\"));\n};\n\nexport default CardMenu;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/PageComponents/Menu/CardMenu/index.tsx"],"names":["React","styled","Link","useFullScreen","useScrollAmount","CardDeck","ScrollMessage","div","attrs","props","style","opacity","AboutContainer","CardMenu","routeProps","cards","width","height","flash","cardWidth","useMemo","Math","min","cardHeight","cardsWithDimensions","map","card","background","scrollToCard","location","state","prevPath","prevLocation","index","findIndex","link","scroll"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { Menu } from \"../../../../Domain/Menu/Menu\";\nimport useFullScreen from \"../../../Hooks/useFullScreen\";\nimport useScrollAmount from \"../../../Hooks/useScrollAmount\";\nimport CardDeck from \"./CardDeck/CardDeck\";\n\nconst ScrollMessage = styled.div.attrs<{ opacity: number }>(props => ({\n  style: { opacity: props.opacity },\n}))`\n  position: fixed;\n  bottom: 20px;\n  width: 100%;\n  text-align: center;\n  font-size: small;\n  color: #aaa;\n  z-index: 5000;\n`;\n\nconst AboutContainer = styled.div`\n  position: fixed;\n  top: 8%;\n  left: 8%;\n  width: 100%;\n  a {\n    text-decoration: none;\n    color: #222;\n    &:hover {\n      border-bottom: solid 1px #222;\n    }\n  }\n`;\n\n/**\n * Pages are represented as cards on a deck. As the user scrolls the cards roll off the deck\n * offscreen.  Known to be a little buggy on iphones.\n */\nconst CardMenu: Menu = ({ routeProps, cards }) => {\n  const [width, height, flash] = useFullScreen();\n  const cardWidth = React.useMemo(() => Math.min(500, width * 0.9), [width]);\n  const cardHeight = React.useMemo(() => Math.min(500, height * 0.7), [height]);\n\n  const cardsWithDimensions = React.useMemo(\n    () =>\n      cards.map(card => ({\n        ...card,\n        background: <card.background width={cardWidth} height={cardHeight} />,\n      })),\n    [cardHeight, cardWidth, cards]\n  );\n  const scrollToCard = React.useMemo(() => {\n    if (\n      routeProps.location &&\n      routeProps.location.state &&\n      routeProps.location.state.prevPath\n    ) {\n      const prevLocation = routeProps.location.state.prevPath;\n      const index = cards.findIndex(card => card.link === prevLocation);\n      return index === -1 ? null : index;\n    }\n    return null;\n  }, [cards, routeProps.location]);\n  const scroll = useScrollAmount();\n  if (flash) {\n    return flash;\n  }\n  return (\n    <>\n      <AboutContainer>\n        <Link to={\"/about\"}>About</Link>\n      </AboutContainer>\n      <CardDeck\n        cards={cardsWithDimensions}\n        width={width}\n        cardsWidth={cardWidth}\n        cardsHeight={cardHeight}\n        scrollToCard={scrollToCard}\n      />\n      {/* \n        // @ts-ignore */}\n      <ScrollMessage opacity={(1 - scroll / height) * 2 || 0}>\n        Scroll Up\n      </ScrollMessage>\n    </>\n  );\n};\n\nexport default CardMenu;\n"]},"metadata":{},"sourceType":"module"}