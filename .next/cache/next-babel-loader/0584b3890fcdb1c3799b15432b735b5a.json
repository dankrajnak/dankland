{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vector2d from \"../Vector/Vector2d\";\n\n/**\n * Represents a square in two dimensional space.\n *\n */\nexport default class Square {\n  /**\n   *\n   * @param width the width of the square\n   * @param position the coordinates of the top-left point of the square\n   */\n  constructor(width, position) {\n    _defineProperty(this, \"_width\", void 0);\n\n    _defineProperty(this, \"_position\", void 0);\n\n    _defineProperty(this, \"_points\", void 0);\n\n    this._width = width;\n    this._position = this._copyPosition(position);\n    this._points = this._calcPoints();\n  }\n\n  clone() {\n    return new Square(this._width, this._position);\n  }\n\n  get center() {\n    return new Vector2d(this._position.x + this._width / 2, this._position.y - this._width / 2);\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  set width(width) {\n    this._width = width;\n    this._points = this._calcPoints();\n  }\n  /**\n   * Point a is the top left corner\n   * Point b is the top right corner\n   * Point c is the bottom left corner\n   * Point d is the bottom right corner\n   */\n\n\n  get points() {\n    return this._copyPoints(this._points);\n  }\n\n  get pointsAsArray() {\n    return [this._copyPosition(this._points.a), this._copyPosition(this._points.b), this._copyPosition(this._points.d), this._copyPosition(this._points.c)];\n  }\n\n  get position() {\n    return this._copyPosition(this._position);\n  }\n\n  set position(position) {\n    this._position = position;\n    this._points = this._calcPoints();\n  }\n\n  _calcPoints() {\n    return {\n      a: this._position,\n      b: new Vector2d(this._position.x + this._width, this._position.y),\n      c: new Vector2d(this._position.x, this.position.y - this._width),\n      d: new Vector2d(this._position.x + this._width, this._position.y - this._width)\n    };\n  }\n\n  _copyPosition(pos) {\n    return pos.clone();\n  }\n\n  _copyPoints(points) {\n    return {\n      a: this._copyPosition(points.a),\n      b: this._copyPosition(points.b),\n      c: this._copyPosition(points.c),\n      d: this._copyPosition(points.d)\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}