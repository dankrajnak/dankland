{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\nimport styled from \"styled-components\";\nimport FluidService from \"../Services/Fluid/Fluid.service\";\nconst WIDTH = 600;\nconst HEIGHT = 600;\nconst NUM_PARTICLES = 1000;\nconst FPS = 60;\nconst fluidService = new FluidService(NUM_PARTICLES, WIDTH, HEIGHT, 1000 / FPS / 500);\nconst CenterScreen = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FluidExperiment = () => {\n  const artist = React.useMemo(() => ctx => {\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    ctx.fillStyle = \"black\"; // Get next state.\n\n    for (let i = 0; i < NUM_PARTICLES; i++) {\n      const point = fluidService.state.getPoint(i);\n      ctx.beginPath();\n      ctx.ellipse(point.x + WIDTH / 2, point.y + HEIGHT / 2, 2, 2, 0, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    fluidService.next();\n  }, []);\n  return __jsx(CenterScreen, null, __jsx(CanvasDrawer, {\n    width: WIDTH,\n    height: HEIGHT,\n    artist: artist,\n    fps: FPS\n  }));\n};\n\nexport default FluidExperiment;","map":null,"metadata":{},"sourceType":"module"}