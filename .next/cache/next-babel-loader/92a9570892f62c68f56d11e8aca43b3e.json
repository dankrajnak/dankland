{"ast":null,"code":"// flow\nimport { useEffect, useRef } from \"react\";\nimport throttle from \"../../Services/Throttle/Throttle.service\";\nexport const useScroll = (listener, throtleAmount = 300) => {\n  useEffect(() => {\n    const throttledFunc = throttle(event => listener(event.deltaY), throtleAmount);\n    const wheelListener = window.addEventListener(\"wheel\", throttledFunc);\n    return () => window.removeEventListener(\"wheel\", wheelListener);\n  }, [listener, throtleAmount]);\n};\nexport const useScrollThreshold = (listener, threshold = 0.5, coolDown = 1000) => {\n  const throttledListener = useRef(throttle(val => listener(val), coolDown));\n  const callback = useRef(val => {\n    if (val > threshold || val < -threshold) {\n      throttledListener.current(val);\n    }\n  });\n  useScroll(callback.current);\n};\nexport default useScrollThreshold;","map":null,"metadata":{},"sourceType":"module"}