{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport getNextPendulum from \"../../../Services/DoublePendulum/DoublePendulum.service\";\nimport CanvasDrawer from \"../../UI/CavnasDrawer/CanvasDrawer\";\n\nconst getPendulumCoordinates = pendulum => {\n  // Get coordinates of lower mass.\n  const aAngle = pendulum.get(\"aAngle\") || 0;\n  const aLength = pendulum.get(\"aLength\") || 0;\n  const bAngle = pendulum.get(\"bAngle\") || 0;\n  const bLength = pendulum.get(\"bLength\") || 0;\n  const x1 = Math.sin(aAngle) * aLength;\n  const y1 = Math.cos(aAngle) * aLength;\n  const x2 = x1 + Math.sin(bAngle) * bLength;\n  const y2 = y1 + Math.cos(bAngle) * bLength;\n  return {\n    x1,\n    y1,\n    x2,\n    y2\n  };\n};\n/**\n * Simulates chaotic pendulums utilizing the Runge-Katta algorithm\n */\n\n\nexport default React.memo(function DoublePendulums(props) {\n  let pendulums = props.pendulumsInitialState;\n\n  const drawPendulums = context => {\n    props.renderPendulums(pendulums.map(pendulum => getPendulumCoordinates(pendulum)), context, {\n      width: props.width,\n      height: props.height\n    });\n    pendulums = pendulums.map(getNextPendulum);\n  };\n\n  return __jsx(CanvasDrawer, {\n    width: props.width,\n    height: props.height,\n    artist: drawPendulums\n  });\n});","map":null,"metadata":{},"sourceType":"module"}