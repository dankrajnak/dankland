{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/View/PageComponents/Homepage/TheCoolestOne.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { makePendulum } from \"../../../Services/DoublePendulum/DoublePendulum.service\";\nimport DoublePendulums from \"./DoublePendulums\";\nconst pendulums = [];\n\nfor (let i = 0; i < 10; i++) {\n  pendulums.push(makePendulum());\n}\n\nconst renderPendulums = (pendulums, ctx, info) => {\n  ctx.clearRect(0, 0, info.width, info.height);\n  pendulums = pendulums.map(p => _objectSpread({}, p, {\n    x1: p.x1 + info.width / 2,\n    y1: p.y1 + info.height / 2,\n    x2: p.x2 + info.width / 2,\n    y2: p.y2 + info.height / 2\n  }));\n  pendulums.forEach(p => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"#AAA\";\n    ctx.ellipse(p.x2, p.y2, 1, 1, 0, 0, Math.PI * 2);\n    ctx.stroke();\n    ctx.closePath();\n  }); // Draw lines between pendulums\n\n  ctx.beginPath();\n  ctx.strokeStyle = \"#333\";\n  ctx.moveTo(pendulums[0].x1, pendulums[0].y1);\n\n  for (let i = 1; i < pendulums.length; i++) {\n    ctx.lineTo(pendulums[i].x1, pendulums[i].y1);\n  }\n\n  ctx.lineTo(pendulums[0].x1, pendulums[0].y1);\n  ctx.stroke();\n};\n\nconst TheCoolestOne = props => __jsx(DoublePendulums, {\n  width: props.width,\n  height: props.height,\n  pendulumsInitialState: pendulums,\n  renderPendulums: renderPendulums,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n});\n\nexport default TheCoolestOne;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/PageComponents/Homepage/TheCoolestOne.tsx"],"names":["React","makePendulum","DoublePendulums","pendulums","i","push","renderPendulums","ctx","info","clearRect","width","height","map","p","x1","y1","x2","y2","forEach","beginPath","strokeStyle","ellipse","Math","PI","stroke","closePath","moveTo","length","lineTo","TheCoolestOne","props"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,YADF,QAGO,yDAHP;AAIA,OAAOC,eAAP,MAGO,mBAHP;AAKA,MAAMC,SAA2B,GAAG,EAApC;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,SAAS,CAACE,IAAV,CAAeJ,YAAY,EAA3B;AACD;;AAED,MAAMK,eAAe,GAAG,CACtBH,SADsB,EAEtBI,GAFsB,EAGtBC,IAHsB,KAInB;AACHD,EAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBD,IAAI,CAACE,KAAzB,EAAgCF,IAAI,CAACG,MAArC;AACAR,EAAAA,SAAS,GAAGA,SAAS,CAACS,GAAV,CAAcC,CAAC,sBACtBA,CADsB;AAEzBC,IAAAA,EAAE,EAAED,CAAC,CAACC,EAAF,GAAON,IAAI,CAACE,KAAL,GAAa,CAFC;AAGzBK,IAAAA,EAAE,EAAEF,CAAC,CAACE,EAAF,GAAOP,IAAI,CAACG,MAAL,GAAc,CAHA;AAIzBK,IAAAA,EAAE,EAAEH,CAAC,CAACG,EAAF,GAAOR,IAAI,CAACE,KAAL,GAAa,CAJC;AAKzBO,IAAAA,EAAE,EAAEJ,CAAC,CAACI,EAAF,GAAOT,IAAI,CAACG,MAAL,GAAc;AALA,IAAf,CAAZ;AAQAR,EAAAA,SAAS,CAACe,OAAV,CAAkBL,CAAC,IAAI;AACrBN,IAAAA,GAAG,CAACY,SAAJ;AACAZ,IAAAA,GAAG,CAACa,WAAJ,GAAkB,MAAlB;AACAb,IAAAA,GAAG,CAACc,OAAJ,CAAYR,CAAC,CAACG,EAAd,EAAkBH,CAAC,CAACI,EAApB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCK,IAAI,CAACC,EAAL,GAAU,CAA9C;AACAhB,IAAAA,GAAG,CAACiB,MAAJ;AACAjB,IAAAA,GAAG,CAACkB,SAAJ;AACD,GAND,EAVG,CAkBH;;AACAlB,EAAAA,GAAG,CAACY,SAAJ;AACAZ,EAAAA,GAAG,CAACa,WAAJ,GAAkB,MAAlB;AACAb,EAAAA,GAAG,CAACmB,MAAJ,CAAWvB,SAAS,CAAC,CAAD,CAAT,CAAaW,EAAxB,EAA4BX,SAAS,CAAC,CAAD,CAAT,CAAaY,EAAzC;;AACA,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACwB,MAA9B,EAAsCvB,CAAC,EAAvC,EAA2C;AACzCG,IAAAA,GAAG,CAACqB,MAAJ,CAAWzB,SAAS,CAACC,CAAD,CAAT,CAAaU,EAAxB,EAA4BX,SAAS,CAACC,CAAD,CAAT,CAAaW,EAAzC;AACD;;AACDR,EAAAA,GAAG,CAACqB,MAAJ,CAAWzB,SAAS,CAAC,CAAD,CAAT,CAAaW,EAAxB,EAA4BX,SAAS,CAAC,CAAD,CAAT,CAAaY,EAAzC;AACAR,EAAAA,GAAG,CAACiB,MAAJ;AACD,CA/BD;;AAiCA,MAAMK,aAAa,GAAIC,KAAD,IACpB,MAAC,eAAD;AACE,EAAA,KAAK,EAAEA,KAAK,CAACpB,KADf;AAEE,EAAA,MAAM,EAAEoB,KAAK,CAACnB,MAFhB;AAGE,EAAA,qBAAqB,EAAER,SAHzB;AAIE,EAAA,eAAe,EAAEG,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AASA,eAAeuB,aAAf","sourcesContent":["import * as React from \"react\";\nimport {\n  makePendulum,\n  PendulumVector,\n} from \"../../../Services/DoublePendulum/DoublePendulum.service\";\nimport DoublePendulums, {\n  PendulumPosition,\n  CanvasInfo,\n} from \"./DoublePendulums\";\n\nconst pendulums: PendulumVector[] = [];\nfor (let i = 0; i < 10; i++) {\n  pendulums.push(makePendulum());\n}\n\nconst renderPendulums = (\n  pendulums: PendulumPosition[],\n  ctx: CanvasRenderingContext2D,\n  info: CanvasInfo\n) => {\n  ctx.clearRect(0, 0, info.width, info.height);\n  pendulums = pendulums.map(p => ({\n    ...p,\n    x1: p.x1 + info.width / 2,\n    y1: p.y1 + info.height / 2,\n    x2: p.x2 + info.width / 2,\n    y2: p.y2 + info.height / 2,\n  }));\n\n  pendulums.forEach(p => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"#AAA\";\n    ctx.ellipse(p.x2, p.y2, 1, 1, 0, 0, Math.PI * 2);\n    ctx.stroke();\n    ctx.closePath();\n  });\n\n  // Draw lines between pendulums\n  ctx.beginPath();\n  ctx.strokeStyle = \"#333\";\n  ctx.moveTo(pendulums[0].x1, pendulums[0].y1);\n  for (let i = 1; i < pendulums.length; i++) {\n    ctx.lineTo(pendulums[i].x1, pendulums[i].y1);\n  }\n  ctx.lineTo(pendulums[0].x1, pendulums[0].y1);\n  ctx.stroke();\n};\n\nconst TheCoolestOne = (props: { width: number; height: number }) => (\n  <DoublePendulums\n    width={props.width}\n    height={props.height}\n    pendulumsInitialState={pendulums}\n    renderPendulums={renderPendulums}\n  />\n);\n\nexport default TheCoolestOne;\n"]},"metadata":{},"sourceType":"module"}