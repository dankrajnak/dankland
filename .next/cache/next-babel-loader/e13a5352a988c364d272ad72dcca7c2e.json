{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/View/UI/MenuButton.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport useSafeLocation from \"../Hooks/useSafeLocation\";\nimport \"../Styles/MenuButton.scss\";\nconst MenuContainer = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 500;\n  opacity: ${props => props.show ? 1 : 0.05};\n  transition: opacity 0.75s ease-in-out;\n  &:hover {\n    opacity: 1 !important;\n  }\n`;\n\nconst Button = ({\n  color = \"white\",\n  fade = false\n}) => {\n  const [showing, setShowing] = React.useState(true);\n  const [safeLocation] = useSafeLocation();\n  let prevPath = null;\n\n  if (safeLocation) {\n    prevPath = safeLocation.pathname;\n  }\n\n  React.useEffect(() => {\n    if (fade) {\n      const timeout = setTimeout(() => setShowing(false), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [fade]);\n  return __jsx(MenuContainer, {\n    color: color,\n    show: showing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: `menu-button menu-button-${color}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"MEN\")));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/UI/MenuButton.tsx"],"names":["React","styled","Link","useSafeLocation","MenuContainer","div","props","show","Button","color","fade","showing","setShowing","useState","safeLocation","prevPath","pathname","useEffect","timeout","setTimeout","clearTimeout"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAO,2BAAP;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAsC;;;;;aAKtDC,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,CAAb,GAAiB,IAAM;;;;;CAL9C;;AAmBA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,OAAV;AAAmBC,EAAAA,IAAI,GAAG;AAA1B,CAAD,KAAoD;AACjE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,YAAD,IAAiBX,eAAe,EAAtC;AACA,MAAIY,QAAQ,GAAG,IAAf;;AACA,MAAID,YAAJ,EAAkB;AAChBC,IAAAA,QAAQ,GAAGD,YAAY,CAACE,QAAxB;AACD;;AACDhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,QAAIP,IAAJ,EAAU;AACR,YAAMQ,OAAO,GAAGC,UAAU,CAAC,MAAMP,UAAU,CAAC,KAAD,CAAjB,EAA0B,IAA1B,CAA1B;AACA,aAAO,MAAMQ,YAAY,CAACF,OAAD,CAAzB;AACD;AACF,GALD,EAKG,CAACR,IAAD,CALH;AAOA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAA6B,IAAA,IAAI,EAAEE,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAG,2BAA0BF,KAAM,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,CADF;AAOD,CArBD;;AAuBA,eAAeD,MAAf","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport useSafeLocation from \"../Hooks/useSafeLocation\";\nimport \"../Styles/MenuButton.scss\";\n\nconst MenuContainer = styled.div<{ show: boolean; color: string }>`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 500;\n  opacity: ${props => (props.show ? 1 : 0.05)};\n  transition: opacity 0.75s ease-in-out;\n  &:hover {\n    opacity: 1 !important;\n  }\n`;\n\nexport type PossibleMenuColors = \"white\" | \"black\";\n\ninterface ButtonProps {\n  color?: PossibleMenuColors;\n  fade?: boolean;\n}\n\nconst Button = ({ color = \"white\", fade = false }: ButtonProps) => {\n  const [showing, setShowing] = React.useState(true);\n  const [safeLocation] = useSafeLocation();\n  let prevPath = null;\n  if (safeLocation) {\n    prevPath = safeLocation.pathname;\n  }\n  React.useEffect(() => {\n    if (fade) {\n      const timeout = setTimeout(() => setShowing(false), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [fade]);\n\n  return (\n    <MenuContainer color={color} show={showing}>\n      <Link href=\"/\">\n        <a className={`menu-button menu-button-${color}`}>MEN</a>\n      </Link>\n    </MenuContainer>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}