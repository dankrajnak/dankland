{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/pages/metaSphere.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport MetaSphere from \"../Services/MetaSphere/MetaSphere\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\n\nvar MetaSphereElm = function MetaSphereElm() {\n  var metaDrawer = React.useRef(null);\n\n  var _useFullScreen = useFullScreen(),\n      _useFullScreen2 = _slicedToArray(_useFullScreen, 2),\n      width = _useFullScreen2[0],\n      height = _useFullScreen2[1];\n\n  var _useClickHoverWander = useClickHoverWander(width, height),\n      _useClickHoverWander2 = _slicedToArray(_useClickHoverWander, 2),\n      focusPoint = _useClickHoverWander2[0],\n      mouseProps = _useClickHoverWander2[1];\n\n  React.useEffect(function () {\n    metaDrawer.current = new MetaSphere(width, height);\n  }, [height, width]);\n\n  var artist = function artist(ctx) {\n    metaDrawer.current && metaDrawer.current.draw(ctx, focusPoint);\n  };\n\n  return __jsx(MenuLayout, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(CanvasDrawer, _extends({\n    width: width,\n    height: height,\n    artist: artist\n  }, mouseProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nexport default MetaSphereElm;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/pages/metaSphere.tsx"],"names":["React","MenuLayout","MetaSphere","useFullScreen","useClickHoverWander","CanvasDrawer","MetaSphereElm","metaDrawer","useRef","width","height","focusPoint","mouseProps","useEffect","current","artist","ctx","draw"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAgC,IAAhC,CAAnB;;AAD0B,uBAEFL,aAAa,EAFX;AAAA;AAAA,MAEnBM,KAFmB;AAAA,MAEZC,MAFY;;AAAA,6BAGON,mBAAmB,CAACK,KAAD,EAAQC,MAAR,CAH1B;AAAA;AAAA,MAGnBC,UAHmB;AAAA,MAGPC,UAHO;;AAI1BZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpBN,IAAAA,UAAU,CAACO,OAAX,GAAqB,IAAIZ,UAAJ,CAAeO,KAAf,EAAsBC,MAAtB,CAArB;AACD,GAFD,EAEG,CAACA,MAAD,EAASD,KAAT,CAFH;;AAIA,MAAMM,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAmC;AAChDT,IAAAA,UAAU,CAACO,OAAX,IAAsBP,UAAU,CAACO,OAAX,CAAmBG,IAAnB,CAAwBD,GAAxB,EAA6BL,UAA7B,CAAtB;AACD,GAFD;;AAIA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,MAAM,EAAEK;AAHV,KAIMH,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAUD,CAtBD;;AAwBA,eAAeN,aAAf","sourcesContent":["import * as React from \"react\";\nimport MenuLayout from \"../View/Layout/MenuLayout\";\nimport MetaSphere from \"../Services/MetaSphere/MetaSphere\";\nimport useFullScreen from \"../View/Hooks/useFullScreen\";\nimport useClickHoverWander from \"../View/Hooks/useClickHoverWander\";\nimport CanvasDrawer from \"../View/UI/CavnasDrawer/CanvasDrawer\";\n\nconst MetaSphereElm = () => {\n  const metaDrawer = React.useRef<MetaSphere | null>(null);\n  const [width, height] = useFullScreen();\n  const [focusPoint, mouseProps] = useClickHoverWander(width, height);\n  React.useEffect(() => {\n    metaDrawer.current = new MetaSphere(width, height);\n  }, [height, width]);\n\n  const artist = (ctx: CanvasRenderingContext2D) => {\n    metaDrawer.current && metaDrawer.current.draw(ctx, focusPoint);\n  };\n\n  return (\n    <MenuLayout color=\"white\">\n      <CanvasDrawer\n        width={width}\n        height={height}\n        artist={artist}\n        {...mouseProps}\n      />\n    </MenuLayout>\n  );\n};\n\nexport default MetaSphereElm;\n"]},"metadata":{},"sourceType":"module"}