{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dankLand/src/View/UI/MenuButton.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 20px;\\n  right: 20px;\\n  z-index: 500;\\n  opacity: \", \";\\n  transition: opacity 0.75s ease-in-out;\\n  &:hover {\\n    opacity: 1 !important;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport useSafeLocation from \"../Hooks/useSafeLocation\";\nimport \"../Styles/MenuButton.scss\";\nvar MenuContainer = styled.div(_templateObject(), function (props) {\n  return props.show ? 1 : 0.05;\n});\n\nvar Button = function Button(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"white\" : _ref$color,\n      _ref$fade = _ref.fade,\n      fade = _ref$fade === void 0 ? false : _ref$fade;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showing = _React$useState2[0],\n      setShowing = _React$useState2[1];\n\n  var _useSafeLocation = useSafeLocation(),\n      _useSafeLocation2 = _slicedToArray(_useSafeLocation, 1),\n      safeLocation = _useSafeLocation2[0];\n\n  var prevPath = null;\n\n  if (safeLocation) {\n    prevPath = safeLocation.pathname;\n  }\n\n  React.useEffect(function () {\n    if (fade) {\n      var timeout = setTimeout(function () {\n        return setShowing(false);\n      }, 2000);\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n  }, [fade]);\n  return __jsx(MenuContainer, {\n    color: color,\n    show: showing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"menu-button menu-button-\".concat(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"MENU\")));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dankLand/src/View/UI/MenuButton.tsx"],"names":["React","styled","Link","useSafeLocation","MenuContainer","div","props","show","Button","color","fade","useState","showing","setShowing","safeLocation","prevPath","pathname","useEffect","timeout","setTimeout","clearTimeout"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAO,2BAAP;AAEA,IAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV,oBAKN,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,IAAN,GAAa,CAAb,GAAiB,IAAtB;AAAA,CALC,CAAnB;;AAmBA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAoD;AAAA,wBAAjDC,KAAiD;AAAA,MAAjDA,KAAiD,2BAAzC,OAAyC;AAAA,uBAAhCC,IAAgC;AAAA,MAAhCA,IAAgC,0BAAzB,KAAyB;;AAAA,wBACnCV,KAAK,CAACW,QAAN,CAAe,IAAf,CADmC;AAAA;AAAA,MAC1DC,OAD0D;AAAA,MACjDC,UADiD;;AAAA,yBAE1CV,eAAe,EAF2B;AAAA;AAAA,MAE1DW,YAF0D;;AAGjE,MAAIC,QAAQ,GAAG,IAAf;;AACA,MAAID,YAAJ,EAAkB;AAChBC,IAAAA,QAAQ,GAAGD,YAAY,CAACE,QAAxB;AACD;;AACDhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AACpB,QAAIP,IAAJ,EAAU;AACR,UAAMQ,OAAO,GAAGC,UAAU,CAAC;AAAA,eAAMN,UAAU,CAAC,KAAD,CAAhB;AAAA,OAAD,EAA0B,IAA1B,CAA1B;AACA,aAAO;AAAA,eAAMO,YAAY,CAACF,OAAD,CAAlB;AAAA,OAAP;AACD;AACF,GALD,EAKG,CAACR,IAAD,CALH;AAOA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAA6B,IAAA,IAAI,EAAEG,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,oCAA6BH,KAA7B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADF;AAOD,CArBD;;AAuBA,eAAeD,MAAf","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport useSafeLocation from \"../Hooks/useSafeLocation\";\nimport \"../Styles/MenuButton.scss\";\n\nconst MenuContainer = styled.div<{ show: boolean; color: string }>`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 500;\n  opacity: ${props => (props.show ? 1 : 0.05)};\n  transition: opacity 0.75s ease-in-out;\n  &:hover {\n    opacity: 1 !important;\n  }\n`;\n\nexport type PossibleMenuColors = \"white\" | \"black\";\n\ninterface ButtonProps {\n  color?: PossibleMenuColors;\n  fade?: boolean;\n}\n\nconst Button = ({ color = \"white\", fade = false }: ButtonProps) => {\n  const [showing, setShowing] = React.useState(true);\n  const [safeLocation] = useSafeLocation();\n  let prevPath = null;\n  if (safeLocation) {\n    prevPath = safeLocation.pathname;\n  }\n  React.useEffect(() => {\n    if (fade) {\n      const timeout = setTimeout(() => setShowing(false), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [fade]);\n\n  return (\n    <MenuContainer color={color} show={showing}>\n      <Link href=\"/\">\n        <a className={`menu-button menu-button-${color}`}>MENU</a>\n      </Link>\n    </MenuContainer>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}