/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useHelper } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useControls } from "leva";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {};
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes } = useGLTF("/models/birbs6.glb") as unknown as GLTFResult;
  const { roughness, metalness } = useControls("birbs", {
    roughness: { value: 0.37, max: 1, min: 0 },
    metalness: { value: 1, max: 1, min: 0 },
  });
  const material = (
    <meshStandardMaterial
      color="#fff"
      roughness={roughness}
      metalness={metalness}
    />
  );
  return (
    <group ref={group} {...props} dispose={null}>
      <pointLight position={[0, 20, 5]} color="#fff" distance={10} />
      <group rotation={[0, 0.01, 3.14]}>
        <mesh geometry={nodes.Object_2.geometry}>{material}</mesh>
        <mesh geometry={nodes.Object_3.geometry}>{material}</mesh>
        <mesh geometry={nodes.Object_4.geometry}>{material}</mesh>
        <mesh geometry={nodes.Object_5.geometry}>{material}</mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/birbs6.glb");
