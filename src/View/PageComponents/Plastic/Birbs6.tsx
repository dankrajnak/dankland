/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useHelper } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { PointLightHelper } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {};
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes } = useGLTF("/models/birbs6.glb") as unknown as GLTFResult;
  const material = (
    <meshStandardMaterial color="#fff" roughness={0.5} metalness={1} />
  );
  const lightRef = useRef();

  return (
    <group ref={group} {...props} dispose={null}>
      <pointLight
        position={[0, 20, 5]}
        color="#fff"
        ref={lightRef}
        distance={20}
      />
      <pointLight
        position={[0, 15, -10]}
        color="gold"
        intensity={0.05}
        distance={20}
      />
      <group rotation={[0, 0.01, 3.14]}>
        <mesh geometry={nodes.Object_2.geometry}>{material}</mesh>
        <mesh geometry={nodes.Object_3.geometry}>{material}</mesh>
        <mesh geometry={nodes.Object_4.geometry}>{material}</mesh>
        <mesh geometry={nodes.Object_5.geometry}>{material}</mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/birbs6.glb");
